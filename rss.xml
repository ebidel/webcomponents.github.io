<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[WebComponents.org]]></title>
        <description><![CDATA[A place to discuss and evolve Web Component best-practices]]></description>
        <link>http://webcomponents.org</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Fri, 22 Jul 2016 12:31:19 GMT</lastBuildDate>
        <atom:link href="http://webcomponents.org/rss.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Fri, 22 Jul 2016 12:30:23 GMT</pubDate>
        <item>
            <title><![CDATA[No title]]></title>
            <description><![CDATA[<div class="wrapper" itemscope itemtype="http://schema.org/CollectionPage">
    <header class="header" role="banner">
        <a class="logo" href="http://webcomponents.org" itemprop="url">
            <img src="http://webcomponents.org/img/logo.svg" alt="WebComponents.org" width="246" height="158" itemprop="image">
        </a>
        <h1 class="title" itemprop="name">WebComponents.org</h1>
        <h2 class="subtitle" itemprop="description">A place to discuss and evolve Web Component best-practices</h2>
    </header>

    <main class="card-container layout-home" role="main">
        <div class="column-first">
            <!-- Polyfills -->
<section class="card card-story card-polyfills" role="region" itemscope itemtype="http://schema.org/WebPage">
    <h3 itemprop="name">Polyfills</h3>
    <div class="description" itemprop="description">
      <p>The webcomponent.js polyfills enable Web Components in (evergreen) browsers that lack native support.</p>
      <p class="card-package-install">
      <strong>Install with <a href="http://bower.io">Bower</a></strong>
      <code>bower install webcomponentsjs</code>
      </p>
      <p class="card-package-install">
      <strong>Install with <a href="http://npmjs.org">npm</a></strong>
      <code>npm install webcomponents.js</code>
      </p>
        <p>
          <a href="https://github.com/webcomponents/webcomponentsjs/archive/v0.7.12.zip" class="card-download-button" onclick="_gaq.push(['_trackEvent', 'Downloads', 'webcomponents.js', 'v0.7.12']);">
            Download webcomponents.js
          </a>
          <span class="filesize">0.7.12 (117KB minified, 34KB gzipped)</span>
        </p>
      </p>
    </div>
    <a class="card-main-btn" href="/polyfills/">Learn more about the polyfills</a>
</section>

            <!-- Browser Support -->
<section class="card card-support" role="region">
    <h3>Browser Support</h3>
    <table class="status-table">
        <tr>
            <td></td>
            
                <td>Chrome</td>
            
                <td>Opera</td>
            
                <td>Firefox</td>
            
                <td>Safari</td>
            
                <td>IE/Edge</td>
            
        </tr>
        <tr>
            <td><img title="Templates" src="http://webcomponents.org/img/icon-status-templates.png" alt="Templates" width="32" height="32"></td>
            
                <td><a title="Stable" href="http://www.chromestatus.com/features/5207287069147136" class="icon-status icon-status-green"></a></td>
            
                <td><a title="Stable" href="http://www.chromestatus.com/features/5207287069147136" class="icon-status icon-status-green"></a></td>
            
                <td><a title="Stable" href="http://caniuse.com/#feat=template" class="icon-status icon-status-green"></a></td>
            
                <td><a title="Stable" href="http://caniuse.com/#feat=template" class="icon-status icon-status-green"></a></td>
            
                <td><a title="Boom! It's done" href="https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/6261273-template-element" class="icon-status icon-status-green"></a></td>
            
        </tr>
        <tr>
            <td><img title="HTML Imports" src="http://webcomponents.org/img/icon-status-htmlimports.png" alt="HTML Imports" width="32" height="32"></td>
            
                <td><a title="Stable" href="http://www.chromestatus.com/features/5144752345317376" class="icon-status icon-status-green"></a></td>
            
                <td><a title="Stable" href="http://dev.opera.com/blog/opera-23/" class="icon-status icon-status-green"></a></td>
            
                <td><a title="On Hold" href="https://hacks.mozilla.org/2014/12/mozilla-and-web-components/" class="icon-status icon-status-yellow"></a></td>
            
                <td><a title="Not implemented yet"  class="icon-status icon-status-red"></a></td>
            
                <td><a title="Under consideration" href="http://status.modern.ie/htmlimports" class="icon-status icon-status-red"></a></td>
            
        </tr>
        <tr>
            <td><img title="Custom Elements" src="http://webcomponents.org/img/icon-status-customelements.png" alt="Custom Elements" width="32" height="32"></td>
            
                <td><a title="Stable" href="http://www.chromestatus.com/features/4642138092470272" class="icon-status icon-status-green"></a></td>
            
                <td><a title="Stable" href="http://dev.opera.com/blog/opera-20/" class="icon-status icon-status-green"></a></td>
            
                <td><a title="Flag" href="https://bugzilla.mozilla.org/show_bug.cgi?id=889230" class="icon-status icon-status-yellow"></a></td>
            
                <td><a title="Not implemented yet"  class="icon-status icon-status-red"></a></td>
            
                <td><a title="Under consideration" href="http://status.modern.ie/customelements" class="icon-status icon-status-red"></a></td>
            
        </tr>
        <tr>
            <td><img title="Shadow DOM" src="http://webcomponents.org/img/icon-status-shadowdom.png" alt="Shadow DOM" width="32" height="32"></td>
            
                <td><a title="Stable" href="http://www.chromestatus.com/features/5479141319114752" class="icon-status icon-status-green"></a></td>
            
                <td><a title="Stable" href="http://dev.opera.com/blog/opera-22/" class="icon-status icon-status-green"></a></td>
            
                <td><a title="Flag" href="https://bugzilla.mozilla.org/show_bug.cgi?id=806506" class="icon-status icon-status-yellow"></a></td>
            
                <td><a title="Nightly" href="https://www.webkit.org/blog/4096/introducing-shadow-dom-api/" class="icon-status icon-status-yellow"></a></td>
            
                <td><a title="Under consideration" href="http://status.modern.ie/shadowdomunprefixed" class="icon-status icon-status-red"></a></td>
            
        </tr>
    </table>
</section>

            <!-- Libraries -->
<section class="card card-links card-libraries" role="region" itemscope itemtype="http://schema.org/ItemList">
    <h3 itemprop="name">Libraries</h3>
    <ul class="link-list">
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="http://www.polymer-project.org/" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Libraries', 'Polymer'], 'http://www.polymer-project.org/');">
                    <img class="icon" src="http://webcomponents.org/img/icon-polymer.png" alt="Polymer" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">Polymer</p>
                    <p class="description" itemprop="description">Polymer is a new type of library for the web, built on top of Web Components, and designed to leverage the evolving web platform on modern browsers.</p>
                </a>
            </li>
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="http://x-tags.org/" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Libraries', 'X-Tag'], 'http://x-tags.org/');">
                    <img class="icon" src="http://webcomponents.org/img/icon-xtags.png" alt="X-Tag" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">X-Tag</p>
                    <p class="description" itemprop="description">X-Tag is a small JavaScript library, created and supported by Mozilla, that brings Web Components Custom Element capabilities to all modern browsers.</p>
                </a>
            </li>
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="http://bosonic.github.io/" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Libraries', 'Bosonic'], 'http://bosonic.github.io/');">
                    <img class="icon" src="http://webcomponents.org/img/icon-bosonic.png" alt="Bosonic" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">Bosonic</p>
                    <p class="description" itemprop="description">Bosonic is a set of tools that enable you to build Web Components as the spec currently describes, and supporting not-so-modern browsers like IE9.</p>
                </a>
            </li>
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="https://github.com/skatejs/skatejs" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Libraries', 'SkateJS'], 'https://github.com/skatejs/skatejs');">
                    <img class="icon" src="http://webcomponents.org/img/icon-skatejs.png" alt="SkateJS" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">SkateJS</p>
                    <p class="description" itemprop="description">SkateJS is a superset of the web component specs, with a very small footprint, that enables you to write performant web components using a functional rendering pipeline.</p>
                </a>
            </li>
        
    </ul>
</section>

        </div>
        <div class="column-middle">
            <!-- Discover -->
<section class="card card-links card-discover" role="region" itemscope itemtype="http://schema.org/ItemList">
    <h3 itemprop="name">Discover</h3>
    <ul class="link-list">
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="http://customelements.io/" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Discover', 'CustomElements.io'], 'http://customelements.io/');">
                    <img class="icon" src="http://webcomponents.org/img/icon-customelementsio.png" alt="CustomElements.io" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">CustomElements.io</p>
                    <p class="description" itemprop="description">A gallery to display Web Components created by the community.</p>
                </a>
            </li>
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="https://elements.polymer-project.org" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Discover', 'Polymer Catalog'], 'https://elements.polymer-project.org');">
                    <img class="icon" src="http://webcomponents.org/img/icon-catalog.png" alt="Polymer Catalog" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">Polymer Catalog</p>
                    <p class="description" itemprop="description">The official product line catalog for Polymer Web Components.</p>
                </a>
            </li>
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="http://builtwithpolymer.org/" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Discover', 'Built with Polymer'], 'http://builtwithpolymer.org/');">
                    <img class="icon" src="http://webcomponents.org/img/icon-polymer.png" alt="Built with Polymer" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">Built with Polymer</p>
                    <p class="description" itemprop="description">A curated collection of web apps and websites using Polymer.</p>
                </a>
            </li>
        
    </ul>
</section>

            <!-- Specs -->
<section class="card card-links card-specs" role="region" itemscope itemtype="http://schema.org/ItemList">
    <h3 itemprop="name">Specs</h3>
    <ul class="link-list">
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="http://w3c.github.io/webcomponents/spec/custom/" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Specs', 'Custom Elements'], 'http://w3c.github.io/webcomponents/spec/custom/');">
                    <img class="icon" src="http://webcomponents.org/img/icon-customelements.png" alt="Custom Elements" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">Custom Elements</p>
                    <p class="description" itemprop="description">This specification describes the method for enabling the author to define and use new types of DOM elements in a document.</p>
                </a>
            </li>
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="http://w3c.github.io/webcomponents/spec/imports/" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Specs', 'HTML Imports'], 'http://w3c.github.io/webcomponents/spec/imports/');">
                    <img class="icon" src="http://webcomponents.org/img/icon-htmlimports.png" alt="HTML Imports" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">HTML Imports</p>
                    <p class="description" itemprop="description">HTML Imports are a way to include and reuse HTML documents in other HTML documents.</p>
                </a>
            </li>
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="https://html.spec.whatwg.org/multipage/scripting.html#the-template-element" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Specs', 'Templates'], 'https://html.spec.whatwg.org/multipage/scripting.html#the-template-element');">
                    <img class="icon" src="http://webcomponents.org/img/icon-templates.png" alt="Templates" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">Templates</p>
                    <p class="description" itemprop="description">This specification describes a method for declaring inert DOM subtrees in HTML and manipulating them to instantiate document fragments with identical contents.</p>
                </a>
            </li>
        
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ItemList">
                <a target="_blank" href="http://w3c.github.io/webcomponents/spec/shadow/" itemprop="url" onclick="_gaq.push(['_trackEvent', 'External links', 'Specs', 'Shadow DOM'], 'http://w3c.github.io/webcomponents/spec/shadow/');">
                    <img class="icon" src="http://webcomponents.org/img/icon-shadowdom.png" alt="Shadow DOM" itemprop="image" width="54" height="54">
                    <p class="title" itemprop="name">Shadow DOM</p>
                    <p class="description" itemprop="description">This specification describes a method of establishing and maintaining functional boundaries between DOM trees and how these trees interact with each other within a document, thus enabling better functional encapsulation within the DOM.</p>
                </a>
            </li>
        
    </ul>
</section>

        </div>
        <div class="column-last">
            <section class="card card-story card-articles" role="region" itemscope itemtype="http://schema.org/Article">
    <h3>Articles</h3>
    
        
        <a class="title" target="_blank" href="https://scotch.io/tutorials/server-side-web-components-how-and-why" itemprop="url">
            Server-side Web Components: How and Why?
        </a>
        <div class="description" itemprop="description">
            <p>Currently Web Components greatest use cases have been in front end web development. What about the back end? It turns out that Web Components are not only useful for the browser but they are also useful for raw functionality. This article talks about the key benefits in having Server Side Web Components.</p>


            

            
                <a class="read-more" href="https://scotch.io/tutorials/server-side-web-components-how-and-why" target="_blank">Read More ></a>
            
        </div>
    
    <a class="card-main-btn" href="http://webcomponents.org/articles/">See all articles</a>
</section>

            <section class="card card-story card-presentations" role="region" itemscope itemtype="http://schema.org/Article">
    <h3>Presentations</h3>
    
        
            <a class="story-image"  href="http://webcomponents.org/presentations/accessibility-is-my-favorite-part-of-the-platform-at-google-io-2016">
                <img src="http://webcomponents.org/img/stories/accessibility-is-my-favorite-part-of-the-platform-at-google-io-2016.jpg" alt="Accessibility is My Favorite Part of the Platform" itemprop="image">
            </a>
        
        <a class="title"  href="http://webcomponents.org/presentations/accessibility-is-my-favorite-part-of-the-platform-at-google-io-2016" itemprop="url">
            Accessibility is My Favorite Part of the Platform
        </a>
        <div class="description" itemprop="description">
            <p>My favorite part of my job is when I get to work on accessibility. I see this as removing uncertainty and anxiety from people’s day, and helping them access the information they need. But working with accessibility can be frustrating, especially when you feel like you’re fighting the platform instead of working with it.</p>

            
                <a class="read-more" href="http://webcomponents.org/presentations/accessibility-is-my-favorite-part-of-the-platform-at-google-io-2016">Read More ></a>
            

            
        </div>
    
    <a class="card-main-btn" href="http://webcomponents.org/presentations/">See all presentations</a>
</section>

        </div>
    </main>
</div>]]></description>
            <link>http://webcomponents.org/</link>
            <guid isPermaLink="true">http://webcomponents.org/</guid>
            <pubDate>Fri, 29 Apr 2016 11:54:26 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[About]]></title>
            <description><![CDATA[<div class="wrapper">
    <main class="card-container layout-archive card-container-about" itemscope itemtype="http://schema.org/CollectionPage">
        
            
        
            
                <section class="card card-1 card-about" itemscope itemtype="http://schema.org/Product">
                    <h3 itemprop="name">What?</h3>

                    <div class="description" itemprop="description">
                        <p>WebComponents.org is the canonical resource for all material related to Web Components development. Web Components provide a new and standard way of building UI components. It’s a lot to absorb all at once and very different from most of the previous ways to work with UI on the web. WebComponents.org provides articles, presentations, podcasts, interviews, original content, resources, tools and much more to assist designers, developers, and other web professionals build components that are (or will be) ‘first class’ DOM objects in the browsers. Our content is totally free and we welcome contributions on to content and other resources such as polyfills & tools maintained by our Github organization.</p>
                    </div>

                </section>
            
        
            
                <section class="card card-2 card-about" itemscope itemtype="http://schema.org/Product">
                    <h3 itemprop="name">Why?</h3>

                    <div class="description" itemprop="description">
                        <p>It’s a different web today. It’s a different way of thinking about UI components on a page. The Polymer, X-tag, and other libraries have stepped up to help abstract some of the complexities of the Web Component Specifications. Projects like Customelements.io & Component.Kitchen have helped us find components but much of the documentation, use cases, and content surrounding Web Components is scattered across the web. We aim to alleviate this random distribution and centralize Web Component content. This will enable us to share knowledge, code, and tooling much faster & in much greater depth across the Web Components ecosystem.</p>
                    </div>

                </section>
            
        

    </main>

    <section class="card card-community" role="region" itemscope itemtype="http://schema.org/ItemList">
    <h3 itemprop="name">Who?</h3>
    <p class="card-about-description">We are the pioneers and community-members of the Web Components ecosystem. The WebComponents.org team is dedicated to supporting all that is part of Web Components. Here is a complete list of the contributors to the project on Github.</p>
    <ul class="layout-community profile-list">

    </ul>
</section>

<script src="http://webcomponents.org/js/contrib.js"></script>
</div>]]></description>
            <link>http://webcomponents.org/about</link>
            <guid isPermaLink="true">http://webcomponents.org/about</guid>
            <pubDate>Fri, 29 Apr 2016 11:54:26 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A Detailed Introduction To Custom Elements]]></title>
            <description><![CDATA[<p>You’ve probably heard all the noise about Web Components and how they’re going to change Web development forever. If you haven’t, you’ve either been living under a rock, are reading this article by accident, or have a full, busy life that doesn’t leave you time to read about unstable and speculative Web technologies. Well, not me.</p>
<!-- Excerpt -->]]></description>
            <link>http://webcomponents.org/articles/a-detailed-introduction-to-custom-elements</link>
            <guid isPermaLink="true">http://webcomponents.org/articles/a-detailed-introduction-to-custom-elements</guid>
            <pubDate>Wed, 12 Mar 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A Guide to Web Components]]></title>
            <description><![CDATA[<p>Recently I was working with a client to train their internal teams on how to build web applications. During this process it occurred to me that the way we presently architect the front-end is very strange and even a bit broken. In many instances you’re either copying huge chunks of HTML out of some doc and then pasting that into your app (Bootstrap, Foundation, etc.), or you’re sprinkling the page with jQuery plugins which have to be configured using JavaScript. It puts us in the rather unfortunate position of having to choose between bloated HTML or mysterious HTML, and often we choose both.</p>
<!-- Excerpt -->]]></description>
            <link>http://webcomponents.org/articles/a-guide-to-web-components</link>
            <guid isPermaLink="true">http://webcomponents.org/articles/a-guide-to-web-components</guid>
            <pubDate>Sun, 19 Jan 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Why?]]></title>
            <description><![CDATA[<p>It’s a different web today. It’s a different way of thinking about UI components on a page. The Polymer, X-tag, and other libraries have stepped up to help abstract some of the complexities of the Web Component Specifications. Projects like Customelements.io & Component.Kitchen have helped us find components but much of the documentation, use cases, and content surrounding Web Components is scattered across the web. We aim to alleviate this random distribution and centralize Web Component content. This will enable us to share knowledge, code, and tooling much faster & in much greater depth across the Web Components ecosystem.</p>]]></description>
            <link>http://webcomponents.org/about/why</link>
            <guid isPermaLink="true">http://webcomponents.org/about/why</guid>
            <pubDate>Fri, 29 Apr 2016 11:54:26 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A Bet on Web Components and Ember.Component Synchronicity]]></title>
            <description><![CDATA[<p>The Ember community is no stranger to componentization. The team for this JavaScript framework has been working hard on the implementation of Ember.Components as well as integrating these seemlessly with standard Web Components.</p>
<p>The boundaries between Ember.Components and a Web Components are beginning to blur more and more. Making these two component models work together should be fairly easy.</p>
<!-- Excerpt -->]]></description>
            <link>http://webcomponents.org/articles/a-bet-on-web-components-and-embercomponent-synchronicity</link>
            <guid isPermaLink="true">http://webcomponents.org/articles/a-bet-on-web-components-and-embercomponent-synchronicity</guid>
            <pubDate>Wed, 04 Mar 2015 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[What?]]></title>
            <description><![CDATA[<p>WebComponents.org is the canonical resource for all material related to Web Components development. Web Components provide a new and standard way of building UI components. It’s a lot to absorb all at once and very different from most of the previous ways to work with UI on the web. WebComponents.org provides articles, presentations, podcasts, interviews, original content, resources, tools and much more to assist designers, developers, and other web professionals build components that are (or will be) ‘first class’ DOM objects in the browsers. Our content is totally free and we welcome contributions on to content and other resources such as polyfills & tools maintained by our Github organization.</p>]]></description>
            <link>http://webcomponents.org/about/what</link>
            <guid isPermaLink="true">http://webcomponents.org/about/what</guid>
            <pubDate>Fri, 29 Apr 2016 11:54:26 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A Quick Introduction To Polymer]]></title>
            <description><![CDATA[<p>A guide to Polymer and its build tools.</p>
<!-- Excerpt -->
<p><blockquote style="margin-top:60px;margin-bottom:30px;font-style:italic;color:grey;font-size:1.5em">I&#39;ve a feeling we&#39;re not in Kansas anymore - Dorothy</blockquote>
<br/><br/></p>
<h1 id="web-component-recap">Web component recap</h1>
<p>Web components are a set of standards for creating reusable HTML elements.</p>
<p>For example if you wanted to create an image carousel, you could make a new html element <code>&lt;image-carousel&gt;</code>, with all it&#39;s JavaScript and CSS inside the element itself. After that is done, you could use this element anywhere in your document.</p>
<p>A key feature of Web Components is the Shadow DOM, which encapsulates everything inside your element. So in the example above, CSS and JS won&#39;t interfere from other elements or global scripts, preventing JS conflicts and CSS bleed.</p>
<h2 id="browser-support-">Browser support?</h2>
<p>The four areas of web components are:</p>
<ul>
<li><a href="http://www.w3.org/TR/html-imports/">HTML imports</a></li>
<li><a href="http://www.w3.org/TR/html-templates/">HTML templates</a></li>
<li><a href="http://www.w3.org/TR/custom-elements/">Custom elements</a></li>
<li><a href="http://www.w3.org/TR/shadow-dom/">Shadow DOM</a>.</li>
</ul>
<p>Browser support figures can be found here — <a href="http://caniuse.com/#search=web%20components">http://caniuse.com/#search=web%20components</a>.</p>
<p>All the major browsers have committed support for the v1.0 of the Shadow DOM specification, v1.0 of custom elements and HTML 5 templates.</p>
<ul>
<li><a href="https://webkit.org/blog/6017/introducing-safari-technology-preview/">Safari</a></li>
<li><a href="https://developer.microsoft.com/en-us/microsoft-edge/platform/status/shadowdom">Internet Explorer</a></li>
<li><a href="https://hacks.mozilla.org/2015/11/an-update-on-web-components-and-firefox/">Firefox</a></li>
</ul>
<h2 id="html-imports">HTML imports</h2>
<p>The sticking point is HTML imports. Chrome has a native implementation, but <a href="http://stackoverflow.com/questions/21177267/es6-modules-vs-html-imports">other browsers</a> are looking to Javascript ES6 modules (with a polyfill for HTML imports).</p>
<h2 id="webcomponents-js">webcomponents.js</h2>
<p>Browser support is varying (at the time of writing) so <a href="https://github.com/webcomponents/webcomponentsjs">webcomponents.js</a> was made to polyfill the web components API.</p>
<p>This code provides all you need to get started with web components!</p>
<h1 id="what-is-polymer-js-">What is Polymer JS?</h1>
<p>There are a few wrappers around web components such as <a href="http://x-tag.readme.io/">x-tag</a> and <a href="https://bosonic.github.io">bosonic</a>.</p>
<p><a href="https://www.polymer-project.org">Polymer</a> is a similar wrapper with a few extra goodies thrown in on top.</p>
<p>The aim of the Polymer project is not to create a bloated library, but instead make the smallest library possible, and make the browser do all the work.</p>
<p><a href="https://www.polymer-project.org/1.0/blog/2016-05-26-IO-2016-Recap.html">#UseThePlatform</a> is the name Polymer give to represent the want for the browser to do all the heavy lifting without libraries.</p>
<p>One of the advantages of using Polymer is that it has a built in data binding model (like <a href="https://angular.io">Angular</a>) enabling complete applications to be made without any other libraries.</p>
<p>Polymer <a href="https://www.polymer-project.org/1.0/docs/browsers">supports all major evergreen browsers</a> and when combined with webcomponents.js supports IE 11+.</p>
<h1 id="getting-started">Getting started</h1>
<p>To get started with Polymer, we are going to make our own element called <em>my-element</em> (all custom elements need a name with a dash in it).</p>
<pre class="highlight"><code class="hljs nimrod">&lt;dom-module id=<span class="hljs-string">"my-element"</span>&gt;
  &lt;<span class="hljs-keyword">template</span>&gt;
  &lt;/<span class="hljs-keyword">template</span>&gt;
  &lt;script&gt;
    <span class="hljs-type">Polymer</span>({
      <span class="hljs-keyword">is</span>: <span class="hljs-string">"my-element"</span>
    });
  &lt;/script&gt;
&lt;/dom-module&gt;
</code></pre><p>Save this in a file called <code>my-element.html</code>. We have declared the name of the element twice (once in the dom-module and once in the Polymer declaration). We can now load our element using <code>&lt;my-element&gt;&lt;/my-element&gt;</code>.</p>
<p>Lets add a bit of styling and a string data binding:</p>
<pre class="highlight"><code class="hljs nimrod">&lt;dom-module id=<span class="hljs-string">"my-element"</span>&gt;
  &lt;<span class="hljs-keyword">template</span>&gt;
    &lt;style&gt;
    .box{
      color: grey;
    }
    &lt;/style&gt;
    &lt;<span class="hljs-keyword">div</span> class=<span class="hljs-string">"box"</span>&gt;{{mybinding}}&lt;/<span class="hljs-keyword">div</span>&gt;
    &lt;/<span class="hljs-keyword">template</span>&gt;
    &lt;script&gt;
      <span class="hljs-type">Polymer</span>({
        <span class="hljs-keyword">is</span>: <span class="hljs-string">"my-element"</span>,
        properties: {
          mybinding: {
            <span class="hljs-keyword">type</span>: <span class="hljs-type">String</span>,
            value: <span class="hljs-string">"My text here"</span>
          }
        }
      });
    &lt;/script&gt;
&lt;/dom-module&gt;
</code></pre><p>We have added a <code>&lt;style&gt;</code> block <em>inside</em> our element (these styles are not available outside our element) and added a properties block to the Polymer section. Each property allows us to bind data from the outside world to our element. The double-moustache syntax <code>{{}}</code> is replaced by Polymer with the realtime value of the property.</p>
<p>To modify the property you can use attributes:</p>
<pre class="highlight"><code class="hljs applescript">&lt;<span class="hljs-keyword">my</span>-element mybinding=<span class="hljs-string">"Hello, World"</span>&gt;&lt;/<span class="hljs-keyword">my</span>-element&gt;
</code></pre><p>Or they can be changed programatically:</p>
<pre class="highlight"><code class="hljs actionscript">myobj.<span class="hljs-keyword">set</span>(<span class="hljs-string">'mybinding'</span>,<span class="hljs-string">'Hello again!'</span>);
<span class="hljs-comment">//myobj being a reference to your element in the DOM</span>
</code></pre><p>To put this all together:</p>
<pre class="highlight"><code class="hljs xml"><span class="hljs-doctype">&lt;!doctype html&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">meta</span> <span class="hljs-attribute">charset</span>=<span class="hljs-value">"utf-8"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">script</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"components/webcomponentsjs/webcomponents-lite.js"</span>&gt;</span><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">link</span> <span class="hljs-attribute">rel</span>=<span class="hljs-value">"import"</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"components/polymer/polymer.html"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">link</span> <span class="hljs-attribute">rel</span>=<span class="hljs-value">"import"</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"my-element.html"</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">head</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-title">body</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">my-element</span> <span class="hljs-attribute">mybinding</span>=<span class="hljs-value">"Hello, world"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">my-element</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">html</span>&gt;</span>
</code></pre><p>Our final example above loads webcomponents-lite, Polymer and our new element into our page.</p>
<p>The <a href="https://www.polymer-project.org/1.0/docs/devguide/feature-overview">Polymer documentation</a> describes all the features in more detail, but the above example describes the basics of making a customizable element.</p>
<h1 id="polymer-tips-and-tools">Polymer tips and tools</h1>
<h2 id="prpl-pattern">PRPL pattern</h2>
<p>PRPL (pronounced purple) is a set of concepts to enable the next generation of web applications:</p>
<ul>
<li>Push - send critical components for apps initial view</li>
<li>Render - load the initial screen ASAP</li>
<li>Pre-cache - store the elements for remaining views</li>
<li>Lazy-load - when a new view is called, load the elements</li>
</ul>
<p>This pattern relies on <a href="https://http2.github.io">HTTP 2</a> for the push capability (when you request only one element or page, the server recommends other files to cache to prevent having the browser work this out at a later time). The pre-cache relies on <a href="http://www.w3.org/TR/service-workers/">service workers</a> to pull down (but not upgrade) all the other elements required for the routes. These elements will then be upgraded at the point in time they are needed (and all the code for this is in the browser cache).</p>
<h2 id="speeding-up-with-vulcanization">Speeding up with vulcanization</h2>
<p>Most browsers don&#39;t natively support HTML imports out-of-the-box so they will need to be polyfilled. The problem with polyfills are that they are slower than native implementations. Worse than that, HTML Imports allow you to import an element, and then, in turn, that imported element can now import more dependent elements, and so on and so forth.</p>
<p>This dependency chain can be slow to import so a compiler (<a href="https://github.com/Polymer/vulcanize">vulcanize</a>) was written to combine all dependencies. Using a compiler like Vulcanize assembles your imports into one flat file so that only that one HTML import is needed.</p>
<p>The PRPL pattern is the opposite of vulcanization. This pattern only loads the minimum individual elements needed to show whats on screen, then lazily load the others.</p>
<p>Polymer&#39;s new <a href="https://github.com/Polymer/polymer-cli">CLI</a> is a tool that can be used for generating both PRPL and a vulcanized version of your project.</p>
<h2 id="polybuild">Polybuild</h2>
<p><a href="https://github.com/PolymerLabs/polybuild">Polybuild</a> is a tool that lives on top of vulcanize and makes it super easy to vulcanize a file and split the output into two files: a HTML file for the <a href="http://www.html5rocks.com/en/tutorials/webcomponents/template/">templates</a> and a JavaScript file for the Polymer code.</p>
<h2 id="sanitising-your-components">Sanitising your components</h2>
<p>The Polymer project has an optional utility known as  <a href="https://github.com/Polymer/hydrolysis">Hydrolysis</a> that can be used to analyze elements. Using Hydrolysis, a tool called  <a href="https://github.com/PolymerLabs/polylint">polylint</a> was made that does a very basic sanity check of your elements (and follows the dependency chain) giving you some piece of mind in the build process.</p>
<p>Polymer&#39;s <a href="https://github.com/Polymer/polymer-cli">CLI</a> tool includes a linter to make the process easier.</p>
<h2 id="shady-dom">Shady DOM</h2>
<p>webcomponents.js comes in two flavors <em>standard</em> and <em>lite</em>. The <em>lite</em> version contains all the polyfills except the Shadow DOM polyfill. The reason for this is that stubbing Shadow DOM is extremely inefficient and can impact performance of your application significantly!</p>
<p>Specifically, there is a noticeable increase in load time when using the standard version of webcomponentsjs, so unless you explicitly need the Shadow DOM it is recommended you use the <em>lite</em> version.</p>
<p>The <a href="https://www.polymer-project.org/1.0/blog/shadydom">Shady DOM</a> provides the same encapsulation benefits as the Shadow DOM but without the massive polyfill overhead.</p>
<h2 id="polymer-micro">Polymer micro</h2>
<p>If you don&#39;t want all the extra features of Polymer you can instead use <a href="https://www.polymer-project.org/1.0/docs/devguide/experimental#polymer-micro">Polymer micro</a>, which is just a plain wrapper around web components.</p>
<h1 id="summary">Summary</h1>
<h2 id="polymer-pros">Polymer pros</h2>
<p>Polymer is a great tool for building modern web apps, it includes a fast binding system that keeps the UI up to date with no extra effort, and wraps web components to provide all the benefits they are designed to provide.</p>
<h2 id="polymer-cons">Polymer cons</h2>
<p>There is an overhead of loading both Polymer and webcomponents.js and then having to go through the <a href="http://www.w3.org/TR/2013/WD-components-intro-20130606/#element-upgrade">upgrade process</a> of custom elements. This means the user has to wait for the app to load fully before interacting with it (although you can be clever with app framing techniques and asynchronously load parts of the UI to reduce load time).</p>
<p>As time goes on and browsers implement the standard, using Polymer will provide speed enhancements as the Shadow DOM allows for efficient rendering (knowing there is no CSS leaks etc). And with HTTP 2.0 with service workers, a Polymer page will have no speed penalty.</p>
<h2 id="staying-up-to-date-with-polymer">Staying up to date with Polymer</h2>
<p>Polymer is always evolving and getting better. The links below are where all the latest info can be found:</p>
<ul>
<li><a href="https://blog.polymer-project.org">Polymer blog</a></li>
<li><a href="https://github.com/Polymer/project/blob/master/Roadmap.md">Roadmap</a></li>
</ul>
]]></description>
            <link>http://webcomponents.org/articles/a-quick-polymer-introduction</link>
            <guid isPermaLink="true">http://webcomponents.org/articles/a-quick-polymer-introduction</guid>
            <pubDate>Wed, 08 Jun 2016 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A W3C Custom Elements Alternative]]></title>
            <description><![CDATA[<p>ES6 introduced some goodness to JavaScript, and Weak or Set Maps are part of it. However, it is not entirely possible to polyfill these features without risking to be a bit obtrusive and not so backward compatible. When <code>webcomponents.js</code> initially went out, it was lacking support for older browsers and bringing in external arbitrary polyfills that were not playing so well together with few other libraries. On top of that, it was bringing features that if used on Android 2 phones or other cheap devices, where not performing so well and hence not that useful as part of the library.</p>
<p>In order to avoid these little obstacles and brings at least Custom Elements out of the entire Web Components family in older Mobile browsers too, Andrea Giammarchi decided to invest some time and create a <code>document.registerElement</code> only polyfill with the goal of supporting as many mobile platforms as possible, and in a reasonable size over decent performance.</p>
<!-- Excerpt -->]]></description>
            <link>http://webcomponents.org/articles/a-w3c-custom-elements-alternative</link>
            <guid isPermaLink="true">http://webcomponents.org/articles/a-w3c-custom-elements-alternative</guid>
            <pubDate>Fri, 20 Mar 2015 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Accessibility and the Shadow DOM]]></title>
            <description><![CDATA[<p>Web Components, including Shadow DOM, are accessible because assistive technologies encounter pages as rendered, meaning the entire document is read as &quot;one happy tree&quot;. With a polyfill to add broader support, users with modern browsers can interact with Web Components using a keyboard, touch or mouse. Screen readers will also read the page aloud, illustrating how Shadow DOM fits seamlessly into the regular DOM.</p>
<p>It’s easy: to make Web Components accessible to all users, write accessible code.</p>
<!-- Excerpt -->]]></description>
            <link>http://webcomponents.org/articles/accessibility-and-the-shadow-dom</link>
            <guid isPermaLink="true">http://webcomponents.org/articles/accessibility-and-the-shadow-dom</guid>
            <pubDate>Wed, 05 Feb 2014 00:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>